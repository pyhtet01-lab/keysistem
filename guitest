local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

-- Удаляем старый GUI
for _,v in pairs(CoreGui:GetChildren()) do
    if v.Name == "Revenant" then
        v:Destroy()
    end
end

-- Создаём GUI
local gui = Instance.new("ScreenGui")
gui.Name = "Revenant"
gui.Parent = CoreGui
gui.Enabled = true

-- Центр экрана
local screenSize = workspace.CurrentCamera.ViewportSize
local sectionCount = 4
local sectionWidth = 225
local sectionSpacing = 50
local totalWidth = sectionWidth * sectionCount + sectionSpacing * (sectionCount - 1)
local startX = (screenSize.X - totalWidth) / 2
local baseY = screenSize.Y * 0.10

-- Функция создания обычной секции
local function createSection(index, titleText, toggleLabel, sliderLabel, onSliderChange)
    local xPos = startX + (sectionWidth + sectionSpacing) * index

    local section = Instance.new("Frame")
    section.Size = UDim2.fromOffset(sectionWidth, 152)
    section.Position = UDim2.fromOffset(xPos, baseY)
    section.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
    section.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = section

    local title = Instance.new("TextButton")
    title.Size = UDim2.fromOffset(sectionWidth, 38)
    title.Position = UDim2.fromOffset(0, 0)
    title.BackgroundTransparency = 1
    title.Text = titleText
    title.Font = Enum.Font.GothamBold
    title.TextSize = 13
    title.TextColor3 = Color3.fromRGB(214, 214, 214)
    title.TextXAlignment = Enum.TextXAlignment.Center
    title.Parent = section

    local arrow = Instance.new("ImageLabel")
    arrow.Size = UDim2.fromOffset(17, 17)
    arrow.Position = UDim2.fromOffset(204, 10)
    arrow.BackgroundTransparency = 1
    arrow.Image = "rbxassetid://7733717447"
    arrow.ImageColor3 = Color3.fromRGB(129, 129, 129)
    arrow.Parent = section

    local container = Instance.new("Frame")
    container.Size = UDim2.fromOffset(sectionWidth, 114)
    container.Position = UDim2.fromOffset(0, 38)
    container.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    container.Parent = section

    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 8)
    containerCorner.Parent = container

    local toggleText = Instance.new("TextLabel")
    toggleText.Size = UDim2.fromOffset(sectionWidth, 18)
    toggleText.Position = UDim2.fromOffset(0, 6)
    toggleText.BackgroundTransparency = 1
    toggleText.Text = toggleLabel
    toggleText.Font = Enum.Font.GothamBold
    toggleText.TextSize = 13
    toggleText.TextColor3 = Color3.fromRGB(214, 214, 214)
    toggleText.TextXAlignment = Enum.TextXAlignment.Center
    toggleText.Parent = container

    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.fromOffset(38, 17)
    toggleFrame.Position = UDim2.fromOffset(180, 6)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
    toggleFrame.Parent = container

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(1, 0)
    toggleCorner.Parent = toggleFrame

    local knob = Instance.new("Frame")
    knob.Size = UDim2.fromOffset(13, 13)
    knob.Position = UDim2.fromOffset(3, 2)
    knob.BackgroundColor3 = Color3.fromRGB(214, 214, 214)
    knob.Parent = toggleFrame

    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(1, 0)
    knobCorner.Parent = knob

    local toggled = false
    local opened = true

    local function updateToggle(state)
        toggled = state
        knob:TweenPosition(state and UDim2.fromOffset(22, 2) or UDim2.fromOffset(3, 2), "Out", "Quad", 0.2, true)
        toggleFrame.BackgroundColor3 = state and Color3.fromRGB(56, 207, 154) or Color3.fromRGB(62, 62, 62)
    end

    toggleFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            updateToggle(not toggled)
        end
    end)

    local label = Instance.new("TextLabel")
    label.Size = UDim2.fromOffset(sectionWidth, 18)
    label.Position = UDim2.fromOffset(0, 30)
    label.BackgroundTransparency = 1
    label.Text = sliderLabel .. ": 50"
    label.Font = Enum.Font.GothamBold
    label.TextSize = 13
    label.TextColor3 = Color3.fromRGB(214, 214, 214)
    label.TextXAlignment = Enum.TextXAlignment.Center
    label.Parent = container

    local bar = Instance.new("Frame")
    bar.Size = UDim2.fromOffset(200, 6)
    bar.Position = UDim2.fromOffset(12, 54)
    bar.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
    bar.Parent = container

    local fill = Instance.new("Frame")
    fill.Size = UDim2.fromOffset(100, 6)
    fill.BackgroundColor3 = Color3.fromRGB(56, 207, 154)
    fill.Parent = bar

    local knobSlider = Instance.new("Frame")
    knobSlider.Size = UDim2.fromOffset(10, 10)
    knobSlider.Position = UDim2.fromOffset(95, -2)
    knobSlider.BackgroundColor3 = Color3.fromRGB(214, 214, 214)
    knobSlider.Parent = bar

    local knobCornerSlider = Instance.new("UICorner")
    knobCornerSlider.CornerRadius = UDim.new(1, 0)
    knobCornerSlider.Parent = knobSlider

    local dragging = false
    knobSlider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseX = Mouse.X
            local relativeX = math.clamp(mouseX - bar.AbsolutePosition.X, 0, 200)
            local value = math.floor((relativeX / 200) * 100)
            fill.Size = UDim2.fromOffset(relativeX, 6)
            knobSlider.Position = UDim2.fromOffset(relativeX - 5, -2)
            label.Text = sliderLabel .. ": " .. tostring(value)
            if onSliderChange then onSliderChange(value) end
        end
    end)

    title.MouseButton1Click:Connect(function()
        opened = not opened
        container.Visible = opened
        section.Size = UDim2.fromOffset(sectionWidth, opened and 152 or 38)
        arrow.Rotation = opened and 0 or 180
    end)
end

-- Функция для секции Setting — только текст
local function createTextSection(index, titleText, contentText)
    local xPos = startX + (sectionWidth + sectionSpacing) * index

    local section = Instance.new("Frame")
    section.Size = UDim2.fromOffset(sectionWidth, 152)
    section.Position = UDim2.fromOffset(xPos, baseY)
    section.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
    section.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = section

    local title = Instance.new("TextButton")
    title.Size = UDim2.fromOffset(sectionWidth, 38)
    title.Position = UDim2.fromOffset(0, 0)
    title.BackgroundTransparency = 1
    title.Text = titleText
    title.Font = Enum.Font.GothamBold
    title.TextSize = 13
    title.TextColor3 = Color3.fromRGB(214, 214, 214)
    title.TextXAlignment = Enum.TextXAlignment.Center
    title.Parent = section

    local arrow = Instance.new("ImageLabel")
    arrow.Size = UDim2.fromOffset(17, 17)
    arrow.Position = UDim2.fromOffset(204, 10)
    arrow.BackgroundTransparency = 1
    arrow.Image = "rbxassetid://7733717447"
    arrow.ImageColor3 = Color3.fromRGB(129, 129, 129)
    arrow.Parent = section

    local container = Instance.new("Frame")
    container.Size = UDim2.fromOffset(sectionWidth, 114)
    container.Position = UDim2.fromOffset(0, 38)
    container.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    container.Parent = section

    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 8)
    containerCorner.Parent = container

    local infoText = Instance.new("TextLabel")
    infoText.Size = UDim2.fromOffset(sectionWidth, 114)
    infoText.Position = UDim2.fromOffset(0, 0)
    infoText.BackgroundTransparency = 1
    infoText.Text = contentText
    infoText.Font = Enum.Font.Gotham
    infoText.TextSize = 13
    infoText.TextColor3 = Color3.fromRGB(214, 214, 214)
    infoText.TextXAlignment = Enum.TextXAlignment.Center
    infoText.TextYAlignment = Enum.TextYAlignment.Center
    infoText.Parent = container

    local opened = true
    title.MouseButton1Click:Connect(function()
        opened = not opened
        container.Visible = opened
        section.Size = UDim2.fromOffset(sectionWidth, opened and 152 or 38)
        arrow.Rotation = opened and 0 or 180
    end)
end

-- Создаём 3 обычные секции
createSection(0, "Combat", "Toggle", "Value", nil)
createSection(1, "Visuals", "Toggle", "Value", nil)
createSection(2, "Player", "WallSpeed", "Value", function(val)
    print("WallSpeed set to:", val)
end)

-- Секция Setting — только текст
createTextSection(3, "Setting", "Настройки будут добавлены позже")

-- F3 toggle
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.F3 and not gameProcessed then
        gui.Enabled = not gui.Enabled
    end
end)
